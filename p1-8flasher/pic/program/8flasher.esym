F N "main" 0 6 ""
D G "__PCM__" 0 22 ""5.049""
D G "__DEVICE__" 0 22 "61"
D G "__DATE__" 0 22 ""18-Nov-19""
D G "__TIME__" 0 22 ""10:49:26""
D G "_UNICODE" 0 22 ""?""
D G "__EVAL" 0 22 ""?"" "Standard Header file for the PIC16C61 device ////////////////"
c L "set_tris_a" 2 3 6 "FUNCTION"
f N "set_tris_a" 2 35 ""
v L "value" 2 35 "int8" `53 
f B "set_tris_a" 2 35 "void(int8 value)" `52 
f N "set_tris_b" 2 36 ""
v L "value" 2 36 "int8" `55 
f B "set_tris_b" 2 36 "void(int8 value)" `54 
f N "get_tris_a" 2 37 ""
f B "get_tris_a" 2 37 "int8()" `56 
f N "get_tris_b" 2 38 ""
f B "get_tris_b" 2 38 "int8()" `57 
f N "output_a" 2 39 ""
v L "value" 2 39 "int8" `59 
f B "output_a" 2 39 "void(int8 value)" `58 
f N "output_b" 2 40 ""
v L "value" 2 40 "int8" `61 
f B "output_b" 2 40 "void(int8 value)" `60 
f N "input_a" 2 41 ""
f B "input_a" 2 41 "int8()" `62 
f N "input_b" 2 42 ""
f B "input_b" 2 42 "int8()" `63 
f N "input_change_a" 2 43 ""
f B "input_change_a" 2 43 "int8()" `64 
f N "input_change_b" 2 44 ""
f B "input_change_b" 2 44 "int8()" `65 
f N "port_b_pullups" 2 45 ""
v L "value" 2 45 "int8" `67 
f B "port_b_pullups" 2 45 "void(int8 value)" `66 
f N "input" 2 46 ""
v L "pin" 2 46 "int16" `69 
f B "input" 2 46 "int8(int16 pin)" `68 
f N "input_state" 2 47 ""
v L "pin" 2 47 "int16" `71 
f B "input_state" 2 47 "int8(int16 pin)" `70 
f N "output_low" 2 48 ""
v L "pin" 2 48 "int16" `73 
f B "output_low" 2 48 "void(int16 pin)" `72 
f N "output_high" 2 49 ""
v L "pin" 2 49 "int16" `75 
f B "output_high" 2 49 "void(int16 pin)" `74 
f N "output_toggle" 2 50 ""
v L "pin" 2 50 "int16" `77 
f B "output_toggle" 2 50 "void(int16 pin)" `76 
f N "output_bit" 2 51 ""
v L "pin" 2 51 "int16" `79 
v L "level" 2 51 "int8" `80 
f B "output_bit" 2 51 "void(int16 pin,int8 level)" `78 
f N "output_float" 2 52 ""
v L "pin" 2 52 "int16" `82 
f B "output_float" 2 52 "void(int16 pin)" `81 
f N "output_drive" 2 53 ""
v L "pin" 2 53 "int16" `84 
f B "output_drive" 2 53 "void(int16 pin)" `83  "Constants used to identify pins in the above are:"
d G "PIN_A0" 2 57 "40"
d G "PIN_A1" 2 58 "41"
d G "PIN_A2" 2 59 "42"
d G "PIN_A3" 2 60 "43"
d G "PIN_A4" 2 61 "44"
d G "PIN_B0" 2 63 "48"
d G "PIN_B1" 2 64 "49"
d G "PIN_B2" 2 65 "50"
d G "PIN_B3" 2 66 "51"
d G "PIN_B4" 2 67 "52"
d G "PIN_B5" 2 68 "53"
d G "PIN_B6" 2 69 "54"
d G "PIN_B7" 2 70 "55"
d G "FALSE" 2 73 "0"
d G "TRUE" 2 74 "1"
d G "BYTE" 2 76 "int8"
d G "BOOLEAN" 2 77 "int1"
d G "getc" 2 79 "getch"
d G "fgetc" 2 80 "getch"
d G "getchar" 2 81 "getch"
d G "putc" 2 82 "putchar"
d G "fputc" 2 83 "putchar"
d G "fgets" 2 84 "gets"
d G "fputs" 2 85 "puts"
c L "output_drive" 2 3 3 "FUNCTION"
f N "restart_cause" 2 90 ""
f B "restart_cause" 2 90 "int8()" `85 
f N "reset_cpu" 2 91 ""
f B "reset_cpu" 2 91 "void()" `86 
f N "sleep" 2 92 ""
f B "sleep" 2 92 "void()" `87  "Constants returned from RESTART_CAUSE() are:"
d G "WDT_FROM_SLEEP" 2 94 "3"
d G "WDT_TIMEOUT" 2 95 "11"
d G "MCLR_FROM_SLEEP" 2 96 "16"
d G "MCLR_FROM_RUN" 2 97 "27"
d G "NORMAL_POWER_UP" 2 98 "27"
d G "BROWNOUT_RESTART" 2 99 "26"
c L "sleep" 2 3 5 "FUNCTION"
f N "setup_timer_0" 2 107 ""
v L "mode" 2 107 "int8" `89 
f B "setup_timer_0" 2 107 "void(int8 mode)" `88 
f N "set_timer0" 2 108 ""
v L "value" 2 108 "int8" `91 
f B "set_timer0" 2 108 "void(int8 value)" `90 
f N "get_timer0" 2 109 ""
f B "get_timer0" 2 109 "int8()" `92 
f N "setup_counters" 2 110 ""
v L "mode" 2 110 "int8" `94 
v L "prescaler" 2 110 "int8" `95 
f B "setup_counters" 2 110 "void(int8 mode,int8 prescaler)" `93 
f N "set_rtcc" 2 111 ""
v L "value" 2 111 "int8" `97 
f B "set_rtcc" 2 111 "void(int8 value)" `96 
f N "get_rtcc" 2 112 ""
f B "get_rtcc" 2 112 "int8()" `98  "Constants used for SETUP_TIMER_0() are:"
d G "T0_INTERNAL" 2 114 "0"
d G "T0_EXT_L_TO_H" 2 115 "32"
d G "T0_EXT_H_TO_L" 2 116 "48"
d G "T0_DIV_1" 2 118 "8"
d G "T0_DIV_2" 2 119 "0"
d G "T0_DIV_4" 2 120 "1"
d G "T0_DIV_8" 2 121 "2"
d G "T0_DIV_16" 2 122 "3"
d G "T0_DIV_32" 2 123 "4"
d G "T0_DIV_64" 2 124 "5"
d G "T0_DIV_128" 2 125 "6"
d G "T0_DIV_256" 2 126 "7"
d G "T0_8_BIT" 2 129 "0"
d G "RTCC_INTERNAL" 2 133 "0"
d G "RTCC_EXT_L_TO_H" 2 134 "32"
d G "RTCC_EXT_H_TO_L" 2 135 "48"
d G "RTCC_DIV_1" 2 136 "8"
d G "RTCC_DIV_2" 2 137 "0"
d G "RTCC_DIV_4" 2 138 "1"
d G "RTCC_DIV_8" 2 139 "2"
d G "RTCC_DIV_16" 2 140 "3"
d G "RTCC_DIV_32" 2 141 "4"
d G "RTCC_DIV_64" 2 142 "5"
d G "RTCC_DIV_128" 2 143 "6"
d G "RTCC_DIV_256" 2 144 "7"
d G "RTCC_8_BIT" 2 145 "0"
c L "get_rtcc" 2 3 8 "FUNCTION"
f N "setup_wdt" 2 156 ""
v L "mode" 2 156 "int16" `100 
f B "setup_wdt" 2 156 "void(int16 mode)" `99 
f N "restart_wdt" 2 157 ""
f B "restart_wdt" 2 157 "void()" `101  "Constants used for SETUP_WDT() are:"
d G "WDT_18MS" 2 160 "8"
d G "WDT_36MS" 2 161 "9"
d G "WDT_72MS" 2 162 "10"
d G "WDT_144MS" 2 163 "11"
d G "WDT_288MS" 2 164 "12"
d G "WDT_576MS" 2 165 "13"
d G "WDT_1152MS" 2 166 "14"
d G "WDT_2304MS" 2 167 "15"
c L "restart_wdt" 2 3 3 "FUNCTION"
f N "abs" 2 174 ""
v L "x" 2 174 "sint8" `103 
f B "abs" 2 174 "sint8(sint8 x)" `102 
f N "abs" 2 175 ""
v L "x" 2 175 "sint16" `105 
f B "abs" 2 175 "sint16(sint16 x)" `104 
f N "abs" 2 176 ""
v L "x" 2 176 "sint32" `107 
f B "abs" 2 176 "sint32(sint32 x)" `106 
f N "abs" 2 177 ""
v L "x" 2 177 "float" `109 
f B "abs" 2 177 "float(float x)" `108 
f N "_mul" 2 178 ""
v L "??65535" 2 178 "int8" `111 
v L "??65535" 2 178 "int8" `112 
f B "_mul" 2 178 "int16(int8 ,int8 )" `110 
f N "_mul" 2 179 ""
v L "??65535" 2 179 "sint8" `114 
v L "??65535" 2 179 "sint8" `115 
f B "_mul" 2 179 "sint16(sint8 ,sint8 )" `113 
f N "_mul" 2 180 ""
v L "??65535" 2 180 "int16" `117 
v L "??65535" 2 180 "int16" `118 
f B "_mul" 2 180 "int32(int16 ,int16 )" `116 
f N "_mul" 2 181 ""
v L "??65535" 2 181 "sint16" `120 
v L "??65535" 2 181 "sint16" `121 
f B "_mul" 2 181 "sint32(sint16 ,sint16 )" `119  "Memory Manipulation Prototypes:"
f N "read_bank" 2 184 ""
v L "bank" 2 184 "int8" `123 
v L "offset" 2 184 "int8" `124 
f B "read_bank" 2 184 "int8(int8 bank,int8 offset)" `122 
f N "write_bank" 2 185 ""
v L "bank" 2 185 "int8" `126 
v L "offset" 2 185 "int8" `127 
v L "value" 2 185 "int8" `128 
f B "write_bank" 2 185 "void(int8 bank,int8 offset,int8 value)" `125 
f N "strcpy" 2 186 ""
v L "dest" 2 186 "*int8" `130 
v L "src" 2 186 "*int8" `131 
f B "strcpy" 2 186 "void(*int8 dest,*int8 src)" `129 
f N "memset" 2 187 ""
v L "destination" 2 187 "*int8" `133 
v L "value" 2 187 "int8" `134 
v L "num" 2 187 "int16" `135 
f B "memset" 2 187 "void(*int8 destination,int8 value,int16 num)" `132 
f N "memcpy" 2 188 ""
v L "destination" 2 188 "*int8" `137 
v L "source" 2 188 "*int8" `138 
v L "num" 2 188 "int16" `139 
f B "memcpy" 2 188 "void(*int8 destination,*int8 source,int16 num)" `136  "String Prototypes:"
f N "toupper" 2 191 ""
v L "cvalue" 2 191 "int8" `141 
f B "toupper" 2 191 "int8(int8 cvalue)" `140 
f N "tolower" 2 192 ""
v L "cvalue" 2 192 "int8" `143 
f B "tolower" 2 192 "int8(int8 cvalue)" `142 
f N "sprintf" 2 193 ""
v L "string" 2 193 "*int8" `145 
v L "cstring" 2 193 "*int8" `146 
f B "sprintf" 2 193 "void(*int8 string,*int8 cstring,*int8 _VA_LIST)" `144  "Data Manipulators Prototypes:"
f N "shift_left" 2 196 ""
v L "address" 2 196 "*int8" `149 
v L "bytes" 2 196 "int8" `150 
v L "value" 2 196 "int8" `151 
f B "shift_left" 2 196 "int8(*int8 address,int8 bytes,int8 value)" `148 
f N "shift_right" 2 197 ""
v L "address" 2 197 "*int8" `153 
v L "bytes" 2 197 "int8" `154 
v L "value" 2 197 "int8" `155 
f B "shift_right" 2 197 "int8(*int8 address,int8 bytes,int8 value)" `152 
f N "rotate_left" 2 198 ""
v L "address" 2 198 "*int8" `157 
v L "bytes" 2 198 "int8" `158 
f B "rotate_left" 2 198 "void(*int8 address,int8 bytes)" `156 
f N "rotate_right" 2 199 ""
v L "address" 2 199 "*int8" `160 
v L "bytes" 2 199 "int8" `161 
f B "rotate_right" 2 199 "void(*int8 address,int8 bytes)" `159 
f N "swap" 2 200 ""
v L "value" 2 200 "int8" `163 
f B "swap" 2 200 "void(int8 value)" `162 
f N "make8" 2 201 ""
v L "var" 2 201 "int16" `165 
v L "offset" 2 201 "int8" `166 
f B "make8" 2 201 "int8(int16 var,int8 offset)" `164 
f N "make8" 2 202 ""
v L "var" 2 202 "int32" `168 
v L "offset" 2 202 "int8" `169 
f B "make8" 2 202 "int8(int32 var,int8 offset)" `167 
f N "make16" 2 203 ""
v L "varhigh" 2 203 "int8" `171 
v L "varlow" 2 203 "int8" `172 
f B "make16" 2 203 "int16(int8 varhigh,int8 varlow)" `170 
f N "make32" 2 204 ""
v L "var1" 2 204 "int16" `174 
f B "make32" 2 204 "int32(int16 var1)" `173 
f N "make32" 2 205 ""
v L "var1" 2 205 "int16" `176 
v L "var2" 2 205 "int16" `177 
f B "make32" 2 205 "int32(int16 var1,int16 var2)" `175 
f N "make32" 2 206 ""
v L "var1" 2 206 "int16" `179 
v L "var2" 2 206 "int8" `180 
f B "make32" 2 206 "int32(int16 var1,int8 var2)" `178 
f N "make32" 2 207 ""
v L "var1" 2 207 "int16" `182 
v L "var2" 2 207 "int8" `183 
v L "var3" 2 207 "int8" `184 
f B "make32" 2 207 "int32(int16 var1,int8 var2,int8 var3)" `181 
f N "make32" 2 208 ""
v L "var1" 2 208 "int8" `186 
f B "make32" 2 208 "int32(int8 var1)" `185 
f N "make32" 2 209 ""
v L "var1" 2 209 "int8" `188 
v L "var2" 2 209 "int8" `189 
f B "make32" 2 209 "int32(int8 var1,int8 var2)" `187 
f N "make32" 2 210 ""
v L "var1" 2 210 "int8" `191 
v L "var2" 2 210 "int8" `192 
v L "var3" 2 210 "int8" `193 
f B "make32" 2 210 "int32(int8 var1,int8 var2,int8 var3)" `190 
f N "make32" 2 211 ""
v L "var1" 2 211 "int8" `195 
v L "var2" 2 211 "int8" `196 
v L "var3" 2 211 "int8" `197 
v L "var4" 2 211 "int8" `198 
f B "make32" 2 211 "int32(int8 var1,int8 var2,int8 var3,int8 var4)" `194 
f N "make32" 2 212 ""
v L "var1" 2 212 "int8" `200 
v L "var2" 2 212 "int16" `201 
f B "make32" 2 212 "int32(int8 var1,int16 var2)" `199 
f N "make32" 2 213 ""
v L "var1" 2 213 "int8" `203 
v L "var2" 2 213 "int16" `204 
v L "var3" 2 213 "int8" `205 
f B "make32" 2 213 "int32(int8 var1,int16 var2,int8 var3)" `202 
f N "make32" 2 214 ""
v L "var1" 2 214 "int8" `207 
v L "var2" 2 214 "int8" `208 
v L "var3" 2 214 "int16" `209 
f B "make32" 2 214 "int32(int8 var1,int8 var2,int16 var3)" `206 
f N "bit_set" 2 215 ""
v L "var" 2 215 "int8" `211 
v L "bit" 2 215 "int8" `212 
f B "bit_set" 2 215 "void(int8 var,int8 bit)" `210 
f N "bit_set" 2 216 ""
v L "var" 2 216 "int16" `214 
v L "bit" 2 216 "int8" `215 
f B "bit_set" 2 216 "void(int16 var,int8 bit)" `213 
f N "bit_set" 2 217 ""
v L "var" 2 217 "int32" `217 
v L "bit" 2 217 "int8" `218 
f B "bit_set" 2 217 "void(int32 var,int8 bit)" `216 
f N "bit_clear" 2 218 ""
v L "var" 2 218 "int8" `220 
v L "bit" 2 218 "int8" `221 
f B "bit_clear" 2 218 "void(int8 var,int8 bit)" `219 
f N "bit_clear" 2 219 ""
v L "var" 2 219 "int16" `223 
v L "bit" 2 219 "int8" `224 
f B "bit_clear" 2 219 "void(int16 var,int8 bit)" `222 
f N "bit_clear" 2 220 ""
v L "var" 2 220 "int32" `226 
v L "bit" 2 220 "int8" `227 
f B "bit_clear" 2 220 "void(int32 var,int8 bit)" `225 
f N "bit_test" 2 221 ""
v L "var" 2 221 "int8" `229 
v L "bit" 2 221 "int8" `230 
f B "bit_test" 2 221 "int8(int8 var,int8 bit)" `228 
f N "bit_test" 2 222 ""
v L "var" 2 222 "int16" `232 
v L "bit" 2 222 "int8" `233 
f B "bit_test" 2 222 "int8(int16 var,int8 bit)" `231 
f N "bit_test" 2 223 ""
v L "var" 2 223 "int32" `235 
v L "bit" 2 223 "int8" `236 
f B "bit_test" 2 223 "int8(int32 var,int8 bit)" `234  "#use delay() Prototypes:"
f N "delay_cycles" 2 226 ""
v L "count" 2 226 "int8" `238 
f B "delay_cycles" 2 226 "void(int8 count)" `237 
f N "delay_ms" 2 227 ""
v L "time" 2 227 "int16" `240 
f B "delay_ms" 2 227 "void(int16 time)" `239 
f N "delay_us" 2 228 ""
v L "time" 2 228 "int16" `242 
f B "delay_us" 2 228 "void(int16 time)" `241  "#use rs232() Prototypes:"
f N "putchar" 2 231 ""
v L "cdata" 2 231 "int8" `244 
f B "putchar" 2 231 "void(int8 cdata)" `243 
f N "putchar" 2 232 ""
v L "cdata" 2 232 "int8" `246 
v L "stream" 2 232 "int8" `247 
f B "putchar" 2 232 "void(int8 cdata,int8 stream)" `245 
f N "puts" 2 233 ""
v L "string" 2 233 "*int8" `249 
f B "puts" 2 233 "void(*int8 string)" `248 
f N "puts" 2 234 ""
v L "string" 2 234 "*int8" `251 
v L "stream" 2 234 "int8" `252 
f B "puts" 2 234 "void(*int8 string,int8 stream)" `250 
f N "getch" 2 235 ""
f B "getch" 2 235 "int8()" `253 
f N "getch" 2 236 ""
v L "stream" 2 236 "int8" `255 
f B "getch" 2 236 "int8(int8 stream)" `254 
f N "gets" 2 237 ""
v L "string" 2 237 "*int8" `257 
f B "gets" 2 237 "void(*int8 string)" `256 
f N "gets" 2 238 ""
v L "string" 2 238 "*int8" `259 
v L "stream" 2 238 "int8" `260 
f B "gets" 2 238 "void(*int8 string,int8 stream)" `258 
f N "kbhit" 2 239 ""
f B "kbhit" 2 239 "int8()" `261 
f N "kbhit" 2 240 ""
v L "stream" 2 240 "int8" `263 
f B "kbhit" 2 240 "int8(int8 stream)" `262 
f N "printf" 2 241 ""
v L "string" 2 241 "*int8" `265 
f B "printf" 2 241 "void(*int8 string,*int8 _VA_LIST)" `264 
f N "fprintf" 2 242 ""
v L "stream" 2 242 "int8" `268 
v L "string" 2 242 "*int8" `269 
f B "fprintf" 2 242 "void(int8 stream,*int8 string,*int8 _VA_LIST)" `267 
f N "putc_send" 2 243 ""
f B "putc_send" 2 243 "void()" `271 
f N "fputc_send" 2 244 ""
v L "stream" 2 244 "int8" `273 
f B "fputc_send" 2 244 "void(int8 stream)" `272 
f N "rcv_buffer_full" 2 245 ""
f B "rcv_buffer_full" 2 245 "int8()" `274 
f N "rcv_buffer_full" 2 246 ""
v L "stream" 2 246 "int8" `276 
f B "rcv_buffer_full" 2 246 "int8(int8 stream)" `275 
f N "rcv_buffer_bytes" 2 247 ""
f B "rcv_buffer_bytes" 2 247 "int16()" `277 
f N "rcv_buffer_bytes" 2 248 ""
v L "stream" 2 248 "int8" `279 
f B "rcv_buffer_bytes" 2 248 "int16(int8 stream)" `278 
f N "tx_buffer_full" 2 249 ""
f B "tx_buffer_full" 2 249 "int8()" `280 
f N "tx_buffer_full" 2 250 ""
v L "stream" 2 250 "int8" `282 
f B "tx_buffer_full" 2 250 "int8(int8 stream)" `281 
f N "tx_buffer_bytes" 2 251 ""
f B "tx_buffer_bytes" 2 251 "int16()" `283 
f N "tx_buffer_bytes" 2 252 ""
v L "stream" 2 252 "int8" `285 
f B "tx_buffer_bytes" 2 252 "int16(int8 stream)" `284  "#use i2c() Prototypes:"
f N "i2c_read" 2 255 ""
f B "i2c_read" 2 255 "int8()" `286 
f N "i2c_read" 2 256 ""
v L "stream" 2 256 "int8" `288 
f B "i2c_read" 2 256 "int8(int8 stream)" `287 
f N "i2c_read" 2 257 ""
v L "stream" 2 257 "int8" `290 
v L "ack" 2 257 "int8" `291 
f B "i2c_read" 2 257 "int8(int8 stream,int8 ack)" `289 
f N "i2c_write" 2 258 ""
v L "data" 2 258 "int8" `293 
f B "i2c_write" 2 258 "int8(int8 data)" `292 
f N "i2c_write" 2 259 ""
v L "stream" 2 259 "int8" `295 
v L "data" 2 259 "int8" `296 
f B "i2c_write" 2 259 "int8(int8 stream,int8 data)" `294 
f N "i2c_start" 2 260 ""
f B "i2c_start" 2 260 "void()" `297 
f N "i2c_start" 2 261 ""
v L "stream" 2 261 "int8" `299 
f B "i2c_start" 2 261 "void(int8 stream)" `298 
f N "i2c_start" 2 262 ""
v L "stream" 2 262 "int8" `301 
v L "restart" 2 262 "int8" `302 
f B "i2c_start" 2 262 "void(int8 stream,int8 restart)" `300 
f N "i2c_stop" 2 263 ""
f B "i2c_stop" 2 263 "void()" `303 
f N "i2c_stop" 2 264 ""
v L "stream" 2 264 "int8" `305 
f B "i2c_stop" 2 264 "void(int8 stream)" `304 
f N "i2c_isr_state" 2 265 ""
f B "i2c_isr_state" 2 265 "int8()" `306 
f N "i2c_slaveaddr" 2 266 ""
v L "addr" 2 266 "int8" `308 
f B "i2c_slaveaddr" 2 266 "void(int8 addr)" `307 
f N "i2c_slaveaddr" 2 267 ""
v L "stream" 2 267 "int8" `310 
v L "addr" 2 267 "int8" `311 
f B "i2c_slaveaddr" 2 267 "void(int8 stream,int8 addr)" `309 
f N "i2c_poll" 2 268 ""
f B "i2c_poll" 2 268 "int8()" `312 
f N "i2c_poll" 2 269 ""
v L "stream" 2 269 "int8" `314 
f B "i2c_poll" 2 269 "int8(int8 stream)" `313 
f N "i2c_init" 2 270 ""
v L "baud" 2 270 "int32" `316 
f B "i2c_init" 2 270 "void(int32 baud)" `315 
f N "i2c_init" 2 271 ""
v L "stream" 2 271 "int8" `318 
v L "baud" 2 271 "int32" `319 
f B "i2c_init" 2 271 "void(int8 stream,int32 baud)" `317  "#use spi() Prototypes:"
f N "spi_xfer" 2 274 ""
f B "spi_xfer" 2 274 "int8()" `320 
f N "spi_xfer" 2 275 ""
f B "spi_xfer" 2 275 "int16(int8 data)" `321 
f N "spi_xfer" 2 276 ""
f B "spi_xfer" 2 276 "int32(int8 data)" `321 
f N "spi_xfer" 2 277 ""
v L "data" 2 277 "int8" `322 
f B "spi_xfer" 2 277 "int8(int8 data)" `321 
f N "spi_xfer" 2 278 ""
v L "data" 2 278 "int16" `324 
f B "spi_xfer" 2 278 "int16(int16 data)" `323 
f N "spi_xfer" 2 279 ""
v L "data" 2 279 "int32" `326 
f B "spi_xfer" 2 279 "int32(int32 data)" `325 
f N "spi_xfer" 2 280 ""
v L "stream" 2 280 "int8" `328 
v L "data" 2 280 "int8" `329 
f B "spi_xfer" 2 280 "int8(int8 stream,int8 data)" `327 
f N "spi_xfer" 2 281 ""
v L "stream" 2 281 "int8" `331 
v L "data" 2 281 "int16" `332 
f B "spi_xfer" 2 281 "int16(int8 stream,int16 data)" `330 
f N "spi_xfer" 2 282 ""
v L "stream" 2 282 "int8" `334 
v L "data" 2 282 "int32" `335 
f B "spi_xfer" 2 282 "int32(int8 stream,int32 data)" `333 
f N "spi_xfer" 2 283 ""
v L "stream" 2 283 "int8" `337 
v L "data" 2 283 "int8" `338 
v L "bits" 2 283 "int8" `339 
f B "spi_xfer" 2 283 "int8(int8 stream,int8 data,int8 bits)" `336 
f N "spi_xfer" 2 284 ""
v L "stream" 2 284 "int8" `341 
v L "data" 2 284 "int16" `342 
v L "bits" 2 284 "int8" `343 
f B "spi_xfer" 2 284 "int16(int8 stream,int16 data,int8 bits)" `340 
f N "spi_xfer" 2 285 ""
v L "stream" 2 285 "int8" `345 
v L "data" 2 285 "int32" `346 
v L "bits" 2 285 "int8" `347 
f B "spi_xfer" 2 285 "int32(int8 stream,int32 data,int8 bits)" `344 
f N "spi_init" 2 286 ""
v L "baud" 2 286 "int32" `349 
f B "spi_init" 2 286 "void(int32 baud)" `348 
f N "spi_init" 2 287 ""
v L "stream" 2 287 "int8" `351 
v L "baud" 2 287 "int32" `352 
f B "spi_init" 2 287 "void(int8 stream,int32 baud)" `350 
f N "spi_speed" 2 288 ""
v L "baud" 2 288 "int32" `354 
f B "spi_speed" 2 288 "void(int32 baud)" `353 
f N "spi_speed" 2 289 ""
v L "stream" 2 289 "int8" `356 
v L "baud" 2 289 "int32" `357 
f B "spi_speed" 2 289 "void(int8 stream,int32 baud)" `355 
f N "spi_speed" 2 290 ""
v L "stream" 2 290 "int8" `359 
v L "baud" 2 290 "int32" `360 
v L "clock" 2 290 "int32" `361 
f B "spi_speed" 2 290 "void(int8 stream,int32 baud,int32 clock)" `358 
f N "spi_prewrite" 2 291 ""
v L "data" 2 291 "int8" `363 
f B "spi_prewrite" 2 291 "void(int8 data)" `362 
f N "spi_prewrite" 2 292 ""
v L "data" 2 292 "int16" `365 
f B "spi_prewrite" 2 292 "void(int16 data)" `364 
f N "spi_prewrite" 2 293 ""
v L "data" 2 293 "int32" `367 
f B "spi_prewrite" 2 293 "void(int32 data)" `366 
f N "spi_prewrite" 2 294 ""
v L "??65535" 2 294 "int8" `369 
v L "data" 2 294 "int8" `370 
f B "spi_prewrite" 2 294 "void(int8 ,int8 data)" `368 
f N "spi_prewrite" 2 295 ""
v L "??65535" 2 295 "int8" `372 
v L "data" 2 295 "int16" `373 
f B "spi_prewrite" 2 295 "void(int8 ,int16 data)" `371 
f N "spi_prewrite" 2 296 ""
v L "??65535" 2 296 "int8" `375 
v L "data" 2 296 "int32" `376 
f B "spi_prewrite" 2 296 "void(int8 ,int32 data)" `374 
f N "spi_xfer_in" 2 297 ""
f B "spi_xfer_in" 2 297 "int8()" `377 
f N "spi_xfer_in" 2 298 ""
f B "spi_xfer_in" 2 298 "int16(int8 bits)" `378 
f N "spi_xfer_in" 2 299 ""
f B "spi_xfer_in" 2 299 "int32(int8 bits)" `378 
f N "spi_xfer_in" 2 300 ""
v L "bits" 2 300 "int8" `379 
f B "spi_xfer_in" 2 300 "int8(int8 bits)" `378 
f N "spi_xfer_in" 2 301 ""
v L "bits" 2 301 "int8" `381 
f B "spi_xfer_in" 2 301 "int16(int8 bits,int8 bits)" `380 
f N "spi_xfer_in" 2 302 ""
v L "bits" 2 302 "int8" `381 
f B "spi_xfer_in" 2 302 "int32(int8 bits,int8 bits)" `380 
f N "spi_xfer_in" 2 303 ""
v L "stream" 2 303 "int8" `381 
v L "bits" 2 303 "int8" `382 
f B "spi_xfer_in" 2 303 "int8(int8 stream,int8 bits)" `380 
f N "spi_xfer_in" 2 304 ""
v L "stream" 2 304 "int8" `381 
v L "bits" 2 304 "int8" `385 
f B "spi_xfer_in" 2 304 "int16(int8 stream,int8 bits,int8 task)" `383 
f N "spi_xfer_in" 2 305 ""
v L "stream" 2 305 "int8" `381 
v L "bits" 2 305 "int8" `385 
f B "spi_xfer_in" 2 305 "int32(int8 stream,int8 bits,int8 task)" `383  "#use rtos() Prototypes:"
f N "rtos_run" 2 308 ""
f B "rtos_run" 2 308 "void(int8 stream,int8 bits,int8 task)" `383 
f N "rtos_yield" 2 309 ""
f B "rtos_yield" 2 309 "void(int8 bits,int8 task)" `384 
f N "rtos_enable" 2 310 ""
v L "task" 2 310 "int8" `386 
f B "rtos_enable" 2 310 "void(int8 task)" `385 
f N "rtos_disable" 2 311 ""
v L "task" 2 311 "int8" `388 
f B "rtos_disable" 2 311 "void(int8 task)" `387 
f N "rtos_terminate" 2 312 ""
f B "rtos_terminate" 2 312 "void()" `389 
f N "rtos_await" 2 313 ""
v L "flag" 2 313 "int8" `391 
f B "rtos_await" 2 313 "void(int8 flag)" `390 
f N "rtos_wait" 2 314 ""
v L "sem" 2 314 "int8" `393 
f B "rtos_wait" 2 314 "void(int8 sem)" `392 
f N "rtos_signal" 2 315 ""
v L "sem" 2 315 "int8" `395 
f B "rtos_signal" 2 315 "void(int8 sem)" `394 
f N "rtos_msg_send" 2 316 ""
v L "task" 2 316 "int8" `397 
v L "msg" 2 316 "int8" `398 
f B "rtos_msg_send" 2 316 "void(int8 task,int8 msg)" `396 
f N "rtos_msg_read" 2 317 ""
f B "rtos_msg_read" 2 317 "int8()" `399 
f N "rtos_msg_poll" 2 318 ""
f B "rtos_msg_poll" 2 318 "int8()" `400 
f N "rtos_overrun" 2 319 ""
v L "task" 2 319 "int8" `402 
f B "rtos_overrun" 2 319 "int8(int8 task)" `401 
f N "rtos_stats" 2 320 ""
v L "task" 2 320 "int8" `404 
v L "stat" 2 320 "*int8" `405 
f B "rtos_stats" 2 320 "void(int8 task,*int8 stat)" `403  "#use timer() Prototypes:"
f N "get_ticks" 2 323 ""
f B "get_ticks" 2 323 "int8()" `406 
f N "get_ticks" 2 324 ""
f B "get_ticks" 2 324 "int16(int8 stream)" `407 
f N "get_ticks" 2 325 ""
f B "get_ticks" 2 325 "int32(int8 stream)" `407 
f N "get_ticks" 2 326 ""
v L "stream" 2 326 "int8" `408 
f B "get_ticks" 2 326 "int8(int8 stream)" `407 
f N "get_ticks" 2 327 ""
v L "stream" 2 327 "int8" `410 
f B "get_ticks" 2 327 "int16(int8 stream)" `409 
f N "get_ticks" 2 328 ""
v L "stream" 2 328 "int8" `410 
f B "get_ticks" 2 328 "int32(int8 stream)" `409 
f N "set_ticks" 2 329 ""
v L "value" 2 329 "int8" `410 
f B "set_ticks" 2 329 "void(int8 value)" `409 
f N "set_ticks" 2 330 ""
v L "value" 2 330 "int16" `412 
f B "set_ticks" 2 330 "void(int16 value)" `411 
f N "set_ticks" 2 331 ""
v L "value" 2 331 "int32" `414 
f B "set_ticks" 2 331 "void(int32 value)" `413 
f N "set_ticks" 2 332 ""
v L "stream" 2 332 "int8" `416 
v L "value" 2 332 "int8" `417 
f B "set_ticks" 2 332 "void(int8 stream,int8 value)" `415 
f N "set_ticks" 2 333 ""
v L "stream" 2 333 "int8" `419 
v L "value" 2 333 "int16" `420 
f B "set_ticks" 2 333 "void(int8 stream,int16 value)" `418 
f N "set_ticks" 2 334 ""
v L "stream" 2 334 "int8" `422 
v L "value" 2 334 "int32" `423 
f B "set_ticks" 2 334 "void(int8 stream,int32 value)" `421  "#use pwm() Prototypes:"
f N "pwm_on" 2 337 ""
f B "pwm_on" 2 337 "void()" `424 
f N "pwm_on" 2 338 ""
v L "stream" 2 338 "int8" `426 
f B "pwm_on" 2 338 "void(int8 stream)" `425 
f N "pwm_off" 2 339 ""
f B "pwm_off" 2 339 "void()" `427 
f N "pwm_off" 2 340 ""
v L "stream" 2 340 "int8" `429 
f B "pwm_off" 2 340 "void(int8 stream)" `428 
f N "pwm_set_duty" 2 341 ""
v L "duty" 2 341 "int16" `431 
f B "pwm_set_duty" 2 341 "void(int16 duty)" `430 
f N "pwm_set_duty" 2 342 ""
v L "stream" 2 342 "int8" `433 
v L "duty" 2 342 "int16" `434 
f B "pwm_set_duty" 2 342 "void(int8 stream,int16 duty)" `432 
f N "pwm_set_duty_percent" 2 343 ""
v L "percent" 2 343 "int16" `436 
f B "pwm_set_duty_percent" 2 343 "void(int16 percent)" `435 
f N "pwm_set_duty_percent" 2 344 ""
v L "stream" 2 344 "int8" `438 
v L "percent" 2 344 "int16" `439 
f B "pwm_set_duty_percent" 2 344 "void(int8 stream,int16 percent)" `437 
f N "pwm_set_frequency" 2 345 ""
v L "frequency" 2 345 "int32" `441 
f B "pwm_set_frequency" 2 345 "void(int32 frequency)" `440 
f N "pwm_set_frequency" 2 346 ""
v L "stream" 2 346 "int8" `443 
v L "frequency" 2 346 "int32" `444 
f B "pwm_set_frequency" 2 346 "void(int8 stream,int32 frequency)" `442  "#use capture() Prototypes:"
f N "get_capture_time" 2 349 ""
f B "get_capture_time" 2 349 "int16()" `445 
f N "get_capture_time" 2 350 ""
v L "stream" 2 350 "int8" `447 
f B "get_capture_time" 2 350 "int16(int8 stream)" `446 
f N "get_capture_event" 2 351 ""
f B "get_capture_event" 2 351 "int8()" `448 
f N "get_capture_event" 2 352 ""
v L "stream" 2 352 "int8" `450 
f B "get_capture_event" 2 352 "int8(int8 stream)" `449  "Enviroment Prototypes:"
c L "get_capture_event" 2 3 2 "FUNCTION"
f N "goto_address" 2 365 ""
v L "address" 2 365 "int16" `452 
f B "goto_address" 2 365 "void(int16 address)" `451 
f N "label_address" 2 366 ""
v L "label" 2 366 "int16" `454 
f B "label_address" 2 366 "int16(int16 label)" `453  "INT"
c L "label_address" 2 3 4 "FUNCTION"
f N "enable_interrupts" 2 373 ""
v L "interrupt" 2 373 "int32" `456 
f B "enable_interrupts" 2 373 "void(int32 interrupt)" `455 
f N "disable_interrupts" 2 374 ""
v L "interrupt" 2 374 "int32" `458 
f B "disable_interrupts" 2 374 "void(int32 interrupt)" `457 
f N "clear_interrupt" 2 375 ""
v L "interrupt" 2 375 "int32" `460 
f B "clear_interrupt" 2 375 "void(int32 interrupt)" `459 
f N "interrupt_active" 2 376 ""
v L "interrupt" 2 376 "int32" `462 
f B "interrupt_active" 2 376 "int8(int32 interrupt)" `461 
f N "interrupt_enabled" 2 377 ""
v L "interrupt" 2 377 "int32" `464 
f B "interrupt_enabled" 2 377 "int8(int32 interrupt)" `463 
f N "ext_int_edge" 2 378 ""
v L "source" 2 378 "int8" `466 
v L "edge" 2 378 "int8" `467 
f B "ext_int_edge" 2 378 "void(int8 source,int8 edge)" `465 
f N "jump_to_isr" 2 379 ""
v L "address" 2 379 "int16" `469 
f B "jump_to_isr" 2 379 "void(int16 address)" `468  "Constants used in EXT_INT_EDGE() are:"
d G "L_TO_H" 2 381 "0x40"
d G "H_TO_L" 2 382 "0"
d G "GLOBAL" 2 384 "0x0B80"
d G "INT_RTCC" 2 385 "0x000B20"
d G "INT_RB" 2 386 "0x00FF0B08"
d G "INT_EXT_L2H" 2 387 "0x50000B10"
d G "INT_EXT_H2L" 2 388 "0x60000B10"
d G "INT_EXT" 2 389 "0x000B10"
d G "INT_TIMER0" 2 390 "0x000B20"
F N "main" 0 6 ""
F G "main" 0 7 "void()" `474 
V L "data" 0 9 "int8" `475 
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "scanf" 1 255
F B "fscanf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "profileout" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "interrupt_enabled" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_timer_0" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
