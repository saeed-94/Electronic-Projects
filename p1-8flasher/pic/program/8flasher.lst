CCS PCM C Compiler, Version 5.049, 5967               18-Nov-19 10:49

               Filename:   C:\Users\Saeed\Documents\project\p1-8flasher\pic\program\8flasher.lst

               ROM used:   40 words (4%)
                           Largest free fragment is 984
               RAM used:   5 (14%) at main() level
                           6 (17%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   017
0003:  NOP
.................... #include <8flasher.h> 
....................  
....................  
....................  
.................... #include <16C61.h> 
.................... //////////// Standard Header file for the PIC16C61 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16C61 
....................  
.................... #list 
....................  
.................... #use delay (clock=20000000) 
0004:  MOVLW  12
0005:  MOVWF  04
0006:  MOVF   00,W
0007:  BTFSC  03.2
0008:  GOTO   016
0009:  MOVLW  06
000A:  MOVWF  0D
000B:  CLRF   0C
000C:  DECFSZ 0C,F
000D:  GOTO   00C
000E:  DECFSZ 0D,F
000F:  GOTO   00B
0010:  MOVLW  7B
0011:  MOVWF  0C
0012:  DECFSZ 0C,F
0013:  GOTO   012
0014:  DECFSZ 00,F
0015:  GOTO   009
0016:  GOTO   024 (RETURN)
.................... #use FIXED_IO( B_outputs=PIN_B7,PIN_B6,PIN_B5,PIN_B4,PIN_B3,PIN_B2,PIN_B1,PIN_B0 ) 
....................  
.................... void main() 
0017:  MOVF   03,W
0018:  ANDLW  1F
0019:  MOVWF  03
001A:  MOVLW  01
001B:  MOVWF  11
.................... { 
....................  
.................... int data=0x01; 
....................  
....................    while(TRUE) 
....................    { 
....................   output_b(data); 
001C:  BSF    03.5
001D:  CLRF   06
001E:  BCF    03.5
001F:  MOVF   11,W
0020:  MOVWF  06
....................   delay_ms(100); 
0021:  MOVLW  64
0022:  MOVWF  12
0023:  GOTO   004
....................   data=data<<1; 
0024:  BCF    03.0
0025:  RLF    11,F
0026:  GOTO   01C
....................    
.................... } 
....................  
.................... } 
....................  
0027:  SLEEP
....................  

Configuration Fuses:
   Word  1: 3FFF   PLL_DIV_2 VREGSLEEP SOSC_DIG TIMER3C0
